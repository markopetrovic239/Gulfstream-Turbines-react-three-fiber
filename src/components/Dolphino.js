/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, useState, useEffect, useMemo } from 'react'
import { useFrame } from 'react-three-fiber'
import { useGLTF } from '@react-three/drei/useGLTF'
import { useAnimations } from '@react-three/drei/useAnimations'
import { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/dolphin2.glb')
  const [model, set]  = useState()

  useEffect(() =>void new GLTFLoader().load("/dolphin2.glb", set), [])
//const copiedScene = useMemo(() => nodes.Circle002.skeleton.clone(), [nodes.Circle002.skeleton])

const { actions } = useAnimations(animations, group)
 useEffect(() => {
   if(model)
   console.log(model)
   
  actions["Action.001"].play();
  }, [actions, model]) 
  return  (
    <group ref={group} {...props} dispose={null}>
     { model?(<group name="Scene">
        <group name="Armature">
      <primitive object={model.scene} />  
          <group name="Mesh">
             <skinnedMesh
             skeleton={nodes.Circle002.skeleton}
            /> 
           {/*  <skinnedMesh
              name="Circle002_1"
              material={materials['Dolphin Eyes']}
              geometry={nodes.Circle002_1.geometry}
              skeleton={nodes.Circle002_1.skeleton}
            /> */}
          </group>
        </group>
      </group> ): null}
    </group>
  )
}

useGLTF.preload('/dolphin2.glb')
